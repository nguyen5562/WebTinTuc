@model IEnumerable<WebTinTuc.Models.NguoiDung>
@{
    ViewData["Title"] = "Quản lý người dùng";
}

@Html.AntiForgeryToken()

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h1 class="h3 mb-0 text-gray-800">
                    <i class="fas fa-users me-2"></i>Quản lý người dùng
                </h1>
            </div>

            @if (TempData["SuccessMessage"] != null)
            {
                <div class="alert alert-success alert-dismissible fade show" role="alert">
                    <i class="fas fa-check-circle me-2"></i>@TempData["SuccessMessage"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                </div>
            }

            @if (TempData["ErrorMessage"] != null)
            {
                <div class="alert alert-danger alert-dismissible fade show" role="alert">
                    <i class="fas fa-exclamation-circle me-2"></i>@TempData["ErrorMessage"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                </div>
            }

            <div class="card shadow mb-4">
                <div class="card-header py-3">
                    <h6 class="m-0 font-weight-bold text-primary">Danh sách người dùng</h6>
                </div>
                <div class="card-body">
                    @if (Model.Any())
                    {
                        <div class="table-responsive">
                            <table class="table table-bordered" id="dataTable" width="100%" cellspacing="0">
                                <thead>
                                    <tr>
                                        <th>ID</th>
                                        <th>Họ tên</th>
                                        <th>Email</th>
                                        <th>Số điện thoại</th>
                                        <th>Quyền hạn</th>
                                        <th>Trạng thái</th>
                                        <th>Số bài viết</th>
                                        <th>Thao tác</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var nguoiDung in Model)
                                    {
                                        <tr>
                                            <td>@nguoiDung.IdnguoiDung</td>
                                            <td>
                                                <div class="d-flex align-items-center">
                                                    @if (!string.IsNullOrEmpty(nguoiDung.UrlanhDaiDien))
                                                    {
                                                        <img src="@nguoiDung.UrlanhDaiDien" alt="Avatar" class="rounded-circle me-2" style="width: 32px; height: 32px; object-fit: cover;">
                                                    }
                                                    else
                                                    {
                                                        <div class="bg-secondary text-white rounded-circle d-flex align-items-center justify-content-center me-2" style="width: 32px; height: 32px;">
                                                            <i class="fas fa-user" style="font-size: 14px;"></i>
                                                        </div>
                                                    }
                                                    <strong>@nguoiDung.HoTen</strong>
                                                </div>
                                            </td>
                                            <td>@nguoiDung.Email</td>
                                            <td>
                                                @if (!string.IsNullOrEmpty(nguoiDung.SoDienThoai))
                                                {
                                                    @nguoiDung.SoDienThoai
                                                }
                                                else
                                                {
                                                    <span class="text-muted fst-italic">Chưa cập nhật</span>
                                                }
                                            </td>
                                            <td>
                                                <span class="badge @(nguoiDung.IdquyenHanNavigation?.TenQuyenHan == "Quản trị" ? "bg-danger" : 
                                                           nguoiDung.IdquyenHanNavigation?.TenQuyenHan == "Tác giả" ? "bg-warning" : "bg-secondary")">
                                                    @(nguoiDung.IdquyenHanNavigation?.TenQuyenHan ?? "Không xác định")
                                                </span>
                                            </td>
                                            <td>
                                                <span class="badge @(nguoiDung.DaKichHoat == true ? "bg-success" : "bg-danger")">
                                                    @(nguoiDung.DaKichHoat == true ? "Hoạt động" : "Bị khóa")
                                                </span>
                                            </td>
                                            <td>
                                                <span class="badge bg-info">@nguoiDung.BaiVietIdtacGiaNavigations.Count</span>
                                            </td>
                                            <td>
                                                <div class="btn-group" role="group">
                                                    <button type="button" class="btn btn-sm @(nguoiDung.DaKichHoat == true ? "btn-outline-danger" : "btn-outline-success") toggle-user-status-btn" 
                                                            data-id="@nguoiDung.IdnguoiDung" data-status="@nguoiDung.DaKichHoat.ToString().ToLower()">
                                                        <i class="fas @(nguoiDung.DaKichHoat == true ? "fa-lock" : "fa-unlock")"></i>
                                                    </button>
                                                    <div class="btn-group" role="group">
                                                        <button type="button" class="btn btn-sm btn-outline-primary dropdown-toggle" data-bs-toggle="dropdown">
                                                            <i class="fas fa-cog"></i>
                                                        </button>
                                                        <ul class="dropdown-menu">
                                                            <li><a class="dropdown-item change-role-btn" href="#" data-id="@nguoiDung.IdnguoiDung" data-role="1">
                                                                <i class="fas fa-user me-2"></i>Người dùng
                                                            </a></li>
                                                            <li><a class="dropdown-item change-role-btn" href="#" data-id="@nguoiDung.IdnguoiDung" data-role="2">
                                                                <i class="fas fa-pen me-2"></i>Tác giả
                                                            </a></li>
                                                            <li><a class="dropdown-item change-role-btn" href="#" data-id="@nguoiDung.IdnguoiDung" data-role="3">
                                                                <i class="fas fa-crown me-2"></i>Quản trị
                                                            </a></li>
                                                        </ul>
                                                    </div>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                    else
                    {
                        <div class="text-center py-5">
                            <i class="fas fa-users fa-3x text-muted mb-3"></i>
                            <h5 class="text-muted">Chưa có người dùng nào</h5>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Xử lý toggle trạng thái người dùng
        document.querySelectorAll('.toggle-user-status-btn').forEach(btn => {
            btn.addEventListener('click', function() {
                const userId = this.getAttribute('data-id');
                const currentStatus = this.getAttribute('data-status') === 'true';
                const originalText = this.innerHTML;
                
                // Disable button và hiển thị loading
                this.disabled = true;
                this.innerHTML = '<i class="fas fa-spinner fa-spin"></i>';
                
                const formData = new FormData();
                formData.append('id', userId);
                formData.append('__RequestVerificationToken', document.querySelector('input[name="__RequestVerificationToken"]').value);
                
                fetch('@Url.Action("ToggleNguoiDungStatus", "Admin")', {
                    method: 'POST',
                    body: formData,
                    headers: {
                        'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                    }
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        showNotification(data.message, 'success');
                        // Reload trang để cập nhật trạng thái
                        setTimeout(() => window.location.reload(), 1000);
                    } else {
                        showNotification(data.message, 'error');
                        this.disabled = false;
                        this.innerHTML = originalText;
                    }
                })
                .catch(error => {
                    showNotification('Có lỗi xảy ra!', 'error');
                    this.disabled = false;
                    this.innerHTML = originalText;
                });
            });
        });

        // Xử lý thay đổi quyền hạn
        document.querySelectorAll('.change-role-btn').forEach(btn => {
            btn.addEventListener('click', function(e) {
                e.preventDefault();
                
                const userId = this.getAttribute('data-id');
                const newRoleId = parseInt(this.getAttribute('data-role'));
                const roleName = this.textContent.trim();
                
                if (confirm(`Bạn có chắc chắn muốn thay đổi quyền hạn thành "${roleName}"?`)) {
                    const formData = new FormData();
                    formData.append('id', userId);
                    formData.append('newRoleId', newRoleId);
                    formData.append('__RequestVerificationToken', document.querySelector('input[name="__RequestVerificationToken"]').value);
                    
                    fetch('@Url.Action("ChangeNguoiDungRole", "Admin")', {
                        method: 'POST',
                        body: formData,
                        headers: {
                            'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                        }
                    })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            showNotification(data.message, 'success');
                            setTimeout(() => window.location.reload(), 1000);
                        } else {
                            showNotification(data.message, 'error');
                        }
                    })
                    .catch(error => {
                        showNotification('Có lỗi xảy ra!', 'error');
                    });
                }
            });
        });

        // Hàm hiển thị thông báo
        function showNotification(message, type) {
            const alertClass = type === 'success' ? 'alert-success' : 'alert-danger';
            const icon = type === 'success' ? 'fa-check-circle' : 'fa-exclamation-circle';
            
            const notification = document.createElement('div');
            notification.className = `alert ${alertClass} alert-dismissible fade show position-fixed`;
            notification.style.cssText = 'top: 20px; right: 20px; z-index: 9999; min-width: 300px;';
            notification.innerHTML = `
                <i class="fas ${icon} me-2"></i>${message}
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            `;
            
            document.body.appendChild(notification);
            
            setTimeout(() => {
                if (notification.parentNode) {
                    notification.parentNode.removeChild(notification);
                }
            }, 5000);
        }
    </script>
}
