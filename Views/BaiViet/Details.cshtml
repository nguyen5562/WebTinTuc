@model WebTinTuc.Models.BaiViet
@{
    ViewData["Title"] = Model.TieuDe;
}

<div class="row">
    <!-- Nội dung chính -->
    <div class="col-lg-8">
        <!-- Breadcrumb -->
        <nav aria-label="breadcrumb" class="mb-4">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a asp-controller="Home" asp-action="Index">Trang chủ</a></li>
                <li class="breadcrumb-item">
                    <a href="/ChuDe/@Model.IdchuDeNavigation.Slug">
                        @Model.IdchuDeNavigation.TenChuDe
                    </a>
                </li>
                <li class="breadcrumb-item active" aria-current="page">@Model.TieuDe</li>
            </ol>
        </nav>

        <!-- Bài viết chính -->
        <article class="card border-0 shadow-sm mb-4">
            <div class="card-body p-4">
                <!-- Tiêu đề -->
                <h1 class="card-title h2 mb-3 text-primary">@Model.TieuDe</h1>
                
                <!-- Meta thông tin -->
                <div class="d-flex flex-wrap align-items-center text-muted mb-4">
                    <div class="me-4">
                        <i class="fas fa-user me-1"></i>
                        <strong>Tác giả:</strong> @Model.IdtacGiaNavigation.HoTen
                    </div>
                    <div class="me-4">
                        <i class="fas fa-calendar me-1"></i>
                        <strong>Ngày đăng:</strong> @Model.NgayXuatBan?.ToString("dd/MM/yyyy HH:mm")
                    </div>
                    <div class="me-4">
                        <i class="fas fa-eye me-1"></i>
                        <strong>Lượt xem:</strong> @Model.LuotXem
                    </div>
                    @if (Model.LaTinNong == true)
                    {
                        <div>
                            <span class="badge bg-danger">
                                <i class="fas fa-fire me-1"></i>TIN NÓNG
                            </span>
                        </div>
                    }
                </div>

                <!-- Thông báo trạng thái bài viết -->
                @if (Model.IdtrangThaiNavigation.TenTrangThai != "Đã xuất bản")
                {
                    <div class="bg-warning text-dark p-3 rounded mb-4">
                        <h6 class="text-dark mb-2">
                            <i class="fas fa-exclamation-triangle me-1"></i>Trạng thái bài viết
                        </h6>
                        <hr class="text-dark">
                        <div class="d-flex align-items-center">
                            <span class="badge bg-@(Model.IdtrangThaiNavigation.TenTrangThai == "Chờ duyệt" ? "warning" : "secondary") me-2">
                                @Model.IdtrangThaiNavigation.TenTrangThai
                            </span>
                            <span class="text-muted">
                                @if (Model.IdtrangThaiNavigation.TenTrangThai == "Bản nháp")
                                {
                                    <i class="fas fa-edit me-1"></i>@("Bài viết này đang ở dạng bản nháp và chưa được xuất bản.")
                                }
                                else if (Model.IdtrangThaiNavigation.TenTrangThai == "Chờ duyệt")
                                {
                                    <i class="fas fa-clock me-1"></i>@("Bài viết này đang chờ quản trị viên duyệt.")
                                }
                                else if (Model.IdtrangThaiNavigation.TenTrangThai == "Bị từ chối")
                                {
                                    <i class="fas fa-times-circle me-1"></i>@("Bài viết này đã bị từ chối và không được xuất bản.")
                                }
                            </span>
                        </div>
                    </div>
                }

                <!-- Action buttons -->
                @{
                    var userRole = Context.Session.GetString("UserRole");
                    var userId = Context.Session.GetString("UserId");
                    var canEdit = userRole == "Quản trị" || (userRole == "Tác giả" && Model.IdtacGia.ToString() == userId);
                }
                @if (canEdit)
                {
                    <div class="d-flex gap-2 mb-4">
                        <a asp-controller="BaiViet" asp-action="Edit" asp-route-id="@Model.IdbaiViet" class="btn btn-warning">
                            <i class="fas fa-edit me-1"></i>Chỉnh sửa bài viết
                        </a>
                        <a asp-controller="BaiViet" asp-action="Manage" class="btn btn-outline-secondary">
                            <i class="fas fa-list me-1"></i>Quản lý bài viết
                        </a>
                    </div>
                }

                <!-- Ảnh bìa -->
                @if (!string.IsNullOrEmpty(Model.UrlanhBia))
                {
                    <div class="mb-4">
                        <img src="@Model.UrlanhBia" alt="@Model.TieuDe" class="img-fluid rounded shadow-sm" style="max-height: 400px; width: 100%; object-fit: cover;">
                    </div>
                }

                <!-- Tóm tắt -->
                @if (!string.IsNullOrEmpty(Model.TomTat))
                {
                    <div class="bg-light border-start border-primary border-4 p-4 mb-4 rounded">
                        <h5 class="text-primary mb-2">
                            <i class="fas fa-quote-left me-2"></i>Tóm tắt
                        </h5>
                        <p class="mb-0 fst-italic text-muted">@Model.TomTat</p>
                    </div>
                }

                <!-- Nội dung bài viết -->
                <div class="article-content">
                    @Html.Raw(Model.NoiDung)
                </div>

                <!-- Tags/Chủ đề -->
                <div class="mt-4 pt-3 border-top">
                    <div class="d-flex align-items-center">
                        <span class="text-muted me-2">
                            <i class="fas fa-tags me-1"></i>Chủ đề:
                        </span>
                        <a href="/ChuDe/@Model.IdchuDeNavigation.Slug" 
                           class="badge bg-primary text-decoration-none">
                            @Model.IdchuDeNavigation.TenChuDe
                        </a>
                    </div>
                </div>
            </div>
        </article>

        <!-- Phần bình luận -->
        @if (Model.IdtrangThaiNavigation.TenTrangThai == "Đã xuất bản")
        {
            <div class="card border-0 shadow-sm">
                <div class="card-header bg-primary text-white">
                    <h5 class="mb-0">
                        <i class="fas fa-comments me-2"></i>Bình luận (@Model.BinhLuans.Count)
                    </h5>
                </div>
                <div class="card-body">
                <!-- Form thêm bình luận -->
                @if (Context.Session.GetString("UserId") != null)
                {
                    <form id="commentForm" class="mb-4">
                        @Html.AntiForgeryToken()
                        <input type="hidden" name="baiVietId" value="@Model.IdbaiViet" />
                        <div class="mb-3">
                            <label class="form-label">
                                <i class="fas fa-comment me-1"></i>Thêm bình luận
                            </label>
                            <textarea name="noiDung" id="commentContent" class="form-control" rows="4" 
                                      placeholder="Viết bình luận của bạn..." required></textarea>
                        </div>
                        <button type="submit" class="btn btn-primary" id="submitComment">
                            <i class="fas fa-paper-plane me-1"></i>Gửi bình luận
                        </button>
                    </form>
                }
                else
                {
                    <div class="bg-info text-white p-3 rounded mb-3">
                        <i class="fas fa-info-circle me-2"></i>
                        <a asp-controller="Account" asp-action="Login" class="text-white text-decoration-underline">Đăng nhập</a> 
                        để có thể bình luận bài viết này.
                    </div>
                }

                <!-- Danh sách bình luận -->
                <div class="comments-list">
                    @if (Model.BinhLuans.Any())
                    {
                        @foreach (var binhLuan in Model.BinhLuans.Where(c => c.IdbinhLuanCha == null).OrderBy(c => c.NgayBinhLuan))
                        {
                            <div class="comment-item mb-3 p-3 border rounded">
                                <div class="d-flex">
                                    <div class="flex-shrink-0 me-3">
                                        <div class="bg-primary text-white rounded-circle d-flex align-items-center justify-content-center" 
                                             style="width: 40px; height: 40px;">
                                            <i class="fas fa-user"></i>
                                        </div>
                                    </div>
                                    <div class="flex-grow-1">
                                        <div class="d-flex justify-content-between align-items-start mb-2">
                                            <div>
                                                <h6 class="mb-0 text-primary">@binhLuan.IdnguoiDungNavigation.HoTen</h6>
                                                <small class="text-muted">
                                                    <i class="fas fa-clock me-1"></i>
                                                    @binhLuan.NgayBinhLuan?.ToString("dd/MM/yyyy HH:mm")
                                                    @if (Context.Session.GetString("UserRole") == "Quản trị")
                                                    {
                                                        @if (binhLuan.DaDuyet == true)
                                                        {
                                                            <span class="badge bg-success ms-2">Đã duyệt</span>
                                                        }
                                                        else
                                                        {
                                                            <span class="badge bg-warning ms-2">Chờ duyệt</span>
                                                        }
                                                    }
                                                </small>
                                            </div>
                                            <div class="d-flex gap-1">
                                                @if (Context.Session.GetString("UserId") != null)
                                                {
                                                    <button class="btn btn-sm btn-outline-primary reply-btn" 
                                                            data-binh-luan-id="@binhLuan.IdbinhLuan">
                                                        <i class="fas fa-reply me-1"></i>Trả lời
                                                    </button>
                                                }
                                                @if (Context.Session.GetString("UserRole") == "Quản trị")
                                                {
                                                    <button class="btn btn-sm btn-outline-@(binhLuan.DaDuyet ? "warning" : "success") toggle-comment-status" 
                                                            data-binh-luan-id="@binhLuan.IdbinhLuan"
                                                            data-current-status="@binhLuan.DaDuyet.ToString().ToLower()">
                                                        <i class="fas fa-@(binhLuan.DaDuyet ? "eye-slash" : "check") me-1"></i>
                                                        @(binhLuan.DaDuyet ? "Ẩn" : "Duyệt")
                                                    </button>
                                                }
                                            </div>
                                        </div>
                                        <p class="mb-2">@binhLuan.NoiDung</p>
                                        
                                        <!-- Form trả lời (ẩn mặc định) -->
                                        <div class="reply-form" style="display: none;">
                                            <form class="reply-form-submit">
                                                @Html.AntiForgeryToken()
                                                <input type="hidden" name="baiVietId" value="@Model.IdbaiViet" />
                                                <input type="hidden" name="binhLuanChaId" value="@binhLuan.IdbinhLuan" />
                                                <div class="mb-2">
                                                    <textarea name="noiDung" class="form-control form-control-sm reply-content" rows="2" 
                                                              placeholder="Trả lời @binhLuan.IdnguoiDungNavigation.HoTen..." required></textarea>
                                                </div>
                                                <div class="d-flex gap-2">
                                                    <button type="submit" class="btn btn-sm btn-primary">
                                                        <i class="fas fa-paper-plane me-1"></i>Gửi
                                                    </button>
                                                    <button type="button" class="btn btn-sm btn-secondary cancel-reply">
                                                        <i class="fas fa-times me-1"></i>Hủy
                                                    </button>
                                                </div>
                                            </form>
                                        </div>

                                        <!-- Bình luận con -->
                                        @if (binhLuan.InverseIdbinhLuanChaNavigation.Any())
                                        {
                                            <div class="mt-3 ms-3">
                                                @foreach (var reply in binhLuan.InverseIdbinhLuanChaNavigation.OrderBy(r => r.NgayBinhLuan))
                                                {
                                                    <div class="comment-item p-2 border rounded mb-2 bg-light">
                                                        <div class="d-flex">
                                                            <div class="flex-shrink-0 me-2">
                                                                <div class="bg-secondary text-white rounded-circle d-flex align-items-center justify-content-center" 
                                                                     style="width: 30px; height: 30px;">
                                                                    <i class="fas fa-user" style="font-size: 12px;"></i>
                                                                </div>
                                                            </div>
                                                            <div class="flex-grow-1">
                                                                <div class="d-flex justify-content-between align-items-start mb-1">
                                                                    <h6 class="mb-0 text-secondary" style="font-size: 14px;">@reply.IdnguoiDungNavigation.HoTen</h6>
                                                                    <div class="d-flex align-items-center gap-2">
                                                                        <small class="text-muted">
                                                                            <i class="fas fa-clock me-1"></i>
                                                                            @reply.NgayBinhLuan?.ToString("dd/MM/yyyy HH:mm")
                                                                        </small>
                                                                        @if (Context.Session.GetString("UserRole") == "Quản trị")
                                                                        {
                                                                            <span class="badge @(reply.DaDuyet == true ? "bg-success" : "bg-warning")" style="font-size: 10px;">
                                                                                @(reply.DaDuyet == true ? "Đã duyệt" : "Chờ duyệt")
                                                                            </span>
                                                                        }
                                                                    </div>
                                                                </div>
                                                                <p class="mb-0" style="font-size: 14px;">@reply.NoiDung</p>
                                                                
                                                                @if (Context.Session.GetString("UserRole") == "Quản trị")
                                                                {
                                                                    <div class="mt-2">
                                                                        @{
                                                                            bool isParentHidden = !binhLuan.DaDuyet;
                                                                            bool canToggle = !isParentHidden || reply.DaDuyet;
                                                                        }
                                                                        <button type="button" class="btn btn-sm @(reply.DaDuyet == true ? "btn-outline-warning" : "btn-outline-success") toggle-comment-status" 
                                                                                data-binh-luan-id="@reply.IdbinhLuan" data-current-status="@reply.DaDuyet.ToString().ToLower()" 
                                                                                style="font-size: 11px;" @(canToggle ? "" : "disabled")>
                                                                            <i class="fas @(reply.DaDuyet == true ? "fa-eye-slash" : "fa-check") me-1"></i>
                                                                            @if (canToggle)
                                                                            {
                                                                                @(reply.DaDuyet == true ? "Ẩn" : "Duyệt")
                                                                            }
                                                                            else
                                                                            {
                                                                                <span class="text-muted">Bình luận cha bị ẩn</span>
                                                                            }
                                                                        </button>
                                                                    </div>
                                                                }
                                                            </div>
                                                        </div>
                                                    </div>
                                                }
                                            </div>
                                        }
                                    </div>
                                </div>
                            </div>
                        }
                    }
                    else
                    {
                        <div class="text-center text-muted py-4">
                            <i class="fas fa-comment-slash fa-3x mb-3"></i>
                            <p>Chưa có bình luận nào. Hãy là người đầu tiên bình luận!</p>
                        </div>
                    }
                </div>
            </div>
        </div>
        }
        else
        {
            <!-- Thông báo không thể bình luận -->
            <div class="card border-0 shadow-sm">
                <div class="card-header bg-secondary text-white">
                    <h5 class="mb-0">
                        <i class="fas fa-comment-slash me-2"></i>Bình luận không khả dụng
                    </h5>
                </div>
                <div class="card-body text-center py-4">
                    <i class="fas fa-lock fa-3x text-muted mb-3"></i>
                    <p class="text-muted mb-0">
                        Bài viết này chưa được xuất bản nên không thể bình luận.
                    </p>
                </div>
            </div>
        }
    </div>

    <!-- Sidebar -->
    <div class="col-lg-4">
        <!-- Bài viết liên quan -->
        @if (ViewBag.BaiVietLienQuan != null && ((List<WebTinTuc.Models.BaiViet>)ViewBag.BaiVietLienQuan).Any())
        {
            <div class="card border-0 shadow-sm mb-4">
                <div class="card-header bg-primary text-white">
                    <h5 class="mb-0">
                        <i class="fas fa-newspaper me-2"></i>Bài viết liên quan
                    </h5>
                </div>
                <div class="card-body p-0">
                    @foreach (var baiViet in (List<WebTinTuc.Models.BaiViet>)ViewBag.BaiVietLienQuan)
                    {
                        <div class="p-3 border-bottom">
                            <a href="/BaiViet/@baiViet.Slug" 
                               class="text-decoration-none">
                                <h6 class="text-dark mb-2">@baiViet.TieuDe</h6>
                            </a>
                            <div class="d-flex justify-content-between text-muted small">
                                <span>
                                    <i class="fas fa-user me-1"></i>@baiViet.IdtacGiaNavigation.HoTen
                                </span>
                                <span>
                                    <i class="fas fa-eye me-1"></i>@baiViet.LuotXem
                                </span>
                            </div>
                        </div>
                    }
                </div>
            </div>
        }

        <!-- Bài viết mới nhất -->
        @if (ViewBag.BaiVietMoiNhat != null && ((List<WebTinTuc.Models.BaiViet>)ViewBag.BaiVietMoiNhat).Any())
        {
            <div class="card border-0 shadow-sm">
                <div class="card-header bg-success text-white">
                    <h5 class="mb-0">
                        <i class="fas fa-clock me-2"></i>Bài viết mới nhất
                    </h5>
                </div>
                <div class="card-body p-0">
                    @foreach (var baiViet in (List<WebTinTuc.Models.BaiViet>)ViewBag.BaiVietMoiNhat)
                    {
                        <div class="p-3 border-bottom">
                            <a href="/BaiViet/@baiViet.Slug" 
                               class="text-decoration-none">
                                <h6 class="text-dark mb-2">@baiViet.TieuDe</h6>
                            </a>
                            <div class="d-flex justify-content-between text-muted small">
                                <span>
                                    <i class="fas fa-calendar me-1"></i>@baiViet.NgayXuatBan?.ToString("dd/MM/yyyy")
                                </span>
                                <span>
                                    <i class="fas fa-eye me-1"></i>@baiViet.LuotXem
                                </span>
                            </div>
                        </div>
                    }
                </div>
            </div>
        }
    </div>
</div>

@section Scripts {
    <script>
        // Function hiển thị thông báo
        function showNotification(message, type) {
            const notification = document.createElement('div');
            notification.className = `alert alert-${type === 'success' ? 'success' : 'danger'} alert-dismissible fade show position-fixed`;
            notification.style.cssText = 'top: 20px; right: 20px; z-index: 9999; min-width: 300px;';
            notification.innerHTML = `
                <i class="fas fa-${type === 'success' ? 'check-circle' : 'exclamation-circle'} me-2"></i>
                ${message}
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            `;
            
            document.body.appendChild(notification);
            
            // Tự động ẩn sau 5 giây
            setTimeout(() => {
                if (notification.parentNode) {
                    notification.remove();
                }
            }, 5000);
        }

        // Xử lý form bình luận chính
        document.getElementById('commentForm').addEventListener('submit', function(e) {
            e.preventDefault();
            
            const formData = new FormData(this);
            const submitBtn = document.getElementById('submitComment');
            const originalText = submitBtn.innerHTML;
            
            // Disable button và hiển thị loading
            submitBtn.disabled = true;
            submitBtn.innerHTML = '<i class="fas fa-spinner fa-spin me-1"></i>Đang gửi...';
            
            fetch('@Url.Action("AddComment", "BaiViet")', {
                method: 'POST',
                body: formData,
                headers: {
                    'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                }
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    // Hiển thị thông báo thành công
                    showNotification(data.message, 'success');
                    // Xóa nội dung form
                    document.getElementById('commentContent').value = '';
                    // Reload trang để hiển thị bình luận mới
                    setTimeout(() => window.location.reload(), 1000);
                } else {
                    showNotification(data.message, 'error');
                    submitBtn.disabled = false;
                    submitBtn.innerHTML = originalText;
                }
            })
            .catch(error => {
                showNotification('Có lỗi xảy ra khi gửi bình luận. Vui lòng thử lại!', 'error');
                submitBtn.disabled = false;
                submitBtn.innerHTML = originalText;
            });
        });

        // Xử lý form trả lời bình luận
        document.querySelectorAll('.reply-form-submit').forEach(form => {
            form.addEventListener('submit', function(e) {
                e.preventDefault();
                
                const formData = new FormData(this);
                const submitBtn = this.querySelector('button[type="submit"]');
                const originalText = submitBtn.innerHTML;
                
                // Disable button và hiển thị loading
                submitBtn.disabled = true;
                submitBtn.innerHTML = '<i class="fas fa-spinner fa-spin me-1"></i>Đang gửi...';
                
                fetch('@Url.Action("AddComment", "BaiViet")', {
                    method: 'POST',
                    body: formData,
                    headers: {
                        'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                    }
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        // Hiển thị thông báo thành công
                        showNotification(data.message, 'success');
                        // Ẩn form trả lời
                        this.closest('.reply-form').style.display = 'none';
                        this.querySelector('textarea').value = '';
                        // Reload trang để hiển thị bình luận mới
                        setTimeout(() => window.location.reload(), 1000);
                    } else {
                        showNotification(data.message, 'error');
                        submitBtn.disabled = false;
                        submitBtn.innerHTML = originalText;
                    }
                })
                .catch(error => {
                    showNotification('Có lỗi xảy ra khi gửi trả lời. Vui lòng thử lại!', 'error');
                    submitBtn.disabled = false;
                    submitBtn.innerHTML = originalText;
                });
            });
        });

        // Xử lý nút trả lời bình luận
        document.querySelectorAll('.reply-btn').forEach(btn => {
            btn.addEventListener('click', function() {
                const replyForm = this.closest('.comment-item').querySelector('.reply-form');
                replyForm.style.display = replyForm.style.display === 'none' ? 'block' : 'none';
                
                // Focus vào textarea khi hiển thị form
                if (replyForm.style.display === 'block') {
                    replyForm.querySelector('textarea').focus();
                }
            });
        });

        // Xử lý nút hủy trả lời
        document.querySelectorAll('.cancel-reply').forEach(btn => {
            btn.addEventListener('click', function() {
                const replyForm = this.closest('.reply-form');
                replyForm.style.display = 'none';
                replyForm.querySelector('textarea').value = '';
            });
        });

        // Auto-resize textarea
        document.querySelectorAll('textarea').forEach(textarea => {
            textarea.addEventListener('input', function() {
                this.style.height = 'auto';
                this.style.height = this.scrollHeight + 'px';
            });
        });

        // Xử lý nút toggle trạng thái bình luận (chỉ admin)
        document.querySelectorAll('.toggle-comment-status').forEach(btn => {
            btn.addEventListener('click', function() {
                // Kiểm tra nếu nút bị disabled
                if (this.disabled) {
                    return;
                }
                
                const binhLuanId = this.getAttribute('data-binh-luan-id');
                const currentStatus = this.getAttribute('data-current-status') === 'true';
                const originalText = this.innerHTML;
                
                // Disable button và hiển thị loading
                this.disabled = true;
                this.innerHTML = '<i class="fas fa-spinner fa-spin me-1"></i>Đang xử lý...';
                
                const formData = new FormData();
                formData.append('binhLuanId', binhLuanId);
                formData.append('__RequestVerificationToken', document.querySelector('input[name="__RequestVerificationToken"]').value);
                
                fetch('@Url.Action("ToggleCommentStatus", "BaiViet")', {
                    method: 'POST',
                    body: formData,
                    headers: {
                        'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                    }
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        showNotification(data.message, 'success');
                        // Reload trang để cập nhật trạng thái
                        setTimeout(() => window.location.reload(), 1000);
                    } else {
                        showNotification(data.message, 'error');
                        this.disabled = false;
                        this.innerHTML = originalText;
                    }
                })
                .catch(error => {
                    showNotification('Có lỗi xảy ra!', 'error');
                    this.disabled = false;
                    this.innerHTML = originalText;
                });
            });
        });
    </script>
}

<style>
    .article-content {
        line-height: 1.8;
        font-size: 16px;
    }
    
    .article-content h1, .article-content h2, .article-content h3, 
    .article-content h4, .article-content h5, .article-content h6 {
        margin-top: 2rem;
        margin-bottom: 1rem;
        color: #333;
    }
    
    .article-content p {
        margin-bottom: 1.5rem;
    }
    
    .article-content img {
        max-width: 100%;
        height: auto;
        border-radius: 8px;
        box-shadow: 0 2px 8px rgba(0,0,0,0.1);
        margin: 1rem 0;
    }
    
    .comment-item {
        transition: all 0.3s ease;
    }
    
    .comment-item:hover {
        box-shadow: 0 2px 8px rgba(0,0,0,0.1);
    }
    
    .reply-form {
        background-color: #f8f9fa;
        border-radius: 8px;
        padding: 15px;
        margin-top: 10px;
        border-left: 3px solid #007bff;
    }
    
    .notification-container {
        position: fixed;
        top: 20px;
        right: 20px;
        z-index: 9999;
    }
    
    .btn:disabled {
        opacity: 0.6;
        cursor: not-allowed;
    }
    
    .toggle-comment-status:disabled {
        opacity: 0.4;
        cursor: not-allowed;
        background-color: #f8f9fa !important;
        border-color: #dee2e6 !important;
        color: #6c757d !important;
    }
    
    .form-control:focus {
        border-color: #007bff;
        box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);
    }
    
    .comment-item {
        border-left: 3px solid transparent;
        transition: all 0.3s ease;
    }
    
    .comment-item:hover {
        border-left-color: #007bff;
        transform: translateX(5px);
    }
</style>